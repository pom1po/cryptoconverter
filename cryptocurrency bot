npm install node-telegram-bot-api axios

const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

const TOKEN = '7474559258:AAEluSWBFjjuc51tyx8mHRmDDQbaU2fRa2Q'; 

const bot = new TelegramBot(TOKEN, {polling: true});

const CRYPTO_API_URL = 'https://api.coingecko.com/api/v3';

const SUPPORTED_CRYPTO = {
    'btc': 'bitcoin',
    'eth': 'ethereum'
};

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text.toLowerCase();

  if (text === '/start') {
    bot.sendMessage(chatId, 'Привет! Я бот-конвертер криптовалют.\nИспользуй команды /btc или /eth, чтобы узнать курс.');
  }
   else if (text.startsWith('/')) {
      const command = text.slice(1); //убираем '/'
       if (SUPPORTED_CRYPTO[command]) {
            try {
              const cryptoName = SUPPORTED_CRYPTO[command];
             const rate = await getCryptoRate(cryptoName);
             bot.sendMessage(chatId, `Курс ${cryptoName}: ${rate} USD`);

          }
         catch (error) {
              bot.sendMessage(chatId, 'Произошла ошибка при получении курса');
          }
    }else {
        bot.sendMessage(chatId, 'Неизвестная команда');
    }
  }
    });

async function getCryptoRate(cryptoName) {
  try {
      const response = await axios.get(`${CRYPTO_API_URL}/simple/price?ids=${cryptoName}&vs_currencies=usd`);
      const price = response.data[cryptoName].usd;
      if (price){
         return price;
      } else {
          throw new Error("Цена не найдена");
        }
      } catch (error) {
           console.error('Error fetching crypto price:', error);
            throw error;
      }
}
